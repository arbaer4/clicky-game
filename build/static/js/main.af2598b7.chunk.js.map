{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","handleClick","id","alt","src","image","Wrapper","children","Title","App","state","friends","score","highScore","handleCorrectGuess","newFriends","_this$state","_this","newScore","newHighScore","Math","max","setState","shuffleFriends","console","log","handleIncorrectGuess","resetFriends","map","item","Object","objectSpread","clicked","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","this","_this2","components_Wrapper","components_Title","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"q9CAeeA,MAZf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAC3DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMO,GAAIE,IAAKT,EAAMU,iBCAxBC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCK1BC,MAJf,SAAeb,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMY,kBCyFvBE,6MAvFbC,MAAQ,CACNC,UACAC,MAAO,EACPC,UAAW,KAOfC,mBAAqB,SAAAC,GAAc,IAAAC,EACLC,EAAKP,MAAzBG,EADyBG,EACzBH,UAAWD,EADcI,EACdJ,MACbM,EAAWN,EAAQ,EACnBO,EAAeC,KAAKC,IAAIH,EAAUL,GACxCI,EAAKK,SAAS,CACZX,QAASM,EAAKM,eAAeR,GAC7BH,MAAOM,EACPL,UAAWM,IAEbK,QAAQC,IAAIb,MAGdc,qBAAuB,SAAAf,GACrBM,EAAKK,SAAS,CACZX,QAASM,EAAKU,aAAahB,GAC3BC,MAAO,OAIXe,aAAe,SAAAhB,GACb,IAAMgB,EAAehB,EAAQiB,IAAI,SAAAC,GAAI,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GAASD,EAAT,CAAeG,SAAS,MAC7D,OAAOf,EAAKM,eAAeI,MAG7BJ,eAAiB,SAAAZ,GAEf,IADA,IAAIsB,EAAItB,EAAQuB,OAAQ,EACjBD,EAAE,GAAE,CACT,IAAME,EAAIf,KAAKgB,MAAMhB,KAAKiB,UAAWJ,EAAE,IACjCK,EAAO3B,EAAQsB,GACrBtB,EAAQsB,GAAGtB,EAAQwB,GACnBxB,EAAQwB,GAAGG,EACXL,IAEF,OAAOtB,KAGT4B,gBAAkB,SAAArC,GAChB,IAAIsC,GAAmB,EACjBzB,EAAaE,EAAKP,MAAMC,QAAQiB,IAAI,SAAAC,GACxC,IAAMY,EAAOX,OAAAC,EAAA,EAAAD,CAAA,GAAOD,GAOpB,OANIY,EAAQvC,KAAOA,IACZuC,EAAQT,UACXS,EAAQT,SAAU,EAClBQ,GAAkB,IAGfC,IAETD,EACEvB,EAAKH,mBAAmBC,GACxBE,EAAKS,qBAAqBX,uFArD5B2B,KAAKpB,SAAS,CAACX,QAAS+B,KAAKnB,eAAemB,KAAKhC,MAAMC,4CA2D9C,IAAAgC,EAAAD,KACP,OACE9C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8C,EAAD,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAOjC,MAAO8B,KAAKhC,MAAME,MAAOC,UAAW6B,KAAKhC,MAAMG,WAAtD,eAA6EjB,EAAAC,EAAAC,cAAA,WAA7E,UAA8F4C,KAAKhC,MAAME,MAAMhB,EAAAC,EAAAC,cAAA,WAA/G,eAAqI4C,KAAKhC,MAAMG,WAG/I6B,KAAKhC,MAAMC,QAAQiB,IAAI,SAAAC,GAAI,OAC1BjC,EAAAC,EAAAC,cAACgD,EAAD,CACE5C,GAAI2B,EAAK3B,GACT6C,IAAKlB,EAAK3B,GACVG,MAAOwB,EAAKxB,MACZJ,YAAa0C,EAAKJ,6BAhFZS,mBCDlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.af2598b7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.handleClick(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.id} src={props.image} />\n      </div>\n      {/* <span onClick={() => props.handleClick(props.id)}>\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highScore: 0\n  };\n\ncomponentDidMount(){\n  this.setState({friends: this.shuffleFriends(this.state.friends)});\n}\n\nhandleCorrectGuess = newFriends => {\n  const { highScore, score} = this.state;\n  const newScore = score + 1;\n  const newHighScore = Math.max(newScore, highScore);\n  this.setState({\n    friends: this.shuffleFriends(newFriends),\n    score: newScore,\n    highScore: newHighScore\n  });\n  console.log(score);\n};\n\nhandleIncorrectGuess = friends => {\n  this.setState({\n    friends: this.resetFriends(friends),\n    score: 0\n  });\n};\n\nresetFriends = friends => {\n  const resetFriends = friends.map(item => ({...item, clicked: false}))\n  return this.shuffleFriends(resetFriends);\n};\n\nshuffleFriends = friends => {\n  let i = friends.length -1;\n  while (i>0){\n    const j = Math.floor(Math.random()* (i+1));\n    const temp = friends[i]; \n    friends[i]=friends[j];\n    friends[j]=temp;\n    i--;\n  }\n  return friends;\n};\n\nhandleItemClick = id => {\n  let guessedCorrectly = false;\n  const newFriends = this.state.friends.map(item => {\n    const newItem = {...item};\n    if (newItem.id === id) {\n      if (!newItem.clicked){\n        newItem.clicked = true;\n        guessedCorrectly= true;\n      }\n    }\n    return newItem;\n  });\n  guessedCorrectly\n  ? this.handleCorrectGuess(newFriends)\n  : this.handleIncorrectGuess(newFriends);\n};\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <div>\n      <Wrapper>\n        <Title score={this.state.score} highScore={this.state.highScore}>Clicky Game <br></br>Score: {this.state.score}<br></br>High Score: {this.state.highScore}\n        \n        </Title>\n        {this.state.friends.map(item => (\n          <FriendCard\n            id={item.id}\n            key={item.id}\n            image={item.image}\n            handleClick={this.handleItemClick}\n         \n          />\n        ))}\n      </Wrapper>\n      </div>\n    )\n  }}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}